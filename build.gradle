plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT' apply false
    id "org.jetbrains.kotlin.jvm" version "1.9.0" apply false
    id "com.modrinth.minotaur" version "2.+" apply false
}


version = "1.0.0"
group = "junk"


subprojects {
    apply plugin: 'fabric-loom'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'com.modrinth.minotaur'

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url = "https://jitpack.io" }
    }

    loom {
        splitEnvironmentSourceSets()
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = 17
        }
    }

    java {
        // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
        // if it is present.
        // If you remove this line, sources will not be generated.
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    jar {
        from("LICENSE") {
            rename { "${it}_${project.base.archivesName.get()}" }
        }
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("fabric.mod.json") {
            expand "version": project.version
        }
    }

    def sourceFolder = "src" + "${project.name}".substring(2)
    println(sourceFolder)
    sourceSets {
        main {
            java {
                srcDirs += file("../${sourceFolder}/main/java")
            }
            kotlin {
                srcDirs += file("../${sourceFolder}/main/kotlin")
            }
            resources {
                srcDirs += file("../${sourceFolder}/main/resources")
            }
        }
        client {
            java {
                srcDirs += file("../${sourceFolder}/client/java")
            }
            kotlin {
                srcDirs += file("../${sourceFolder}/client/kotlin")
            }
            resources {
                srcDirs += file("../${sourceFolder}/client/resources")
            }
        }
    }

    // configure the maven publication
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }

        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
        repositories {
            // Add repositories to publish to here.
            // Notice: This block does NOT have the same function as the block in the top level.
            // The repositories here will be used for publishing your artifact, not for
            // retrieving dependencies.
        }
    }

}


// modrinth {
//     token = System.getenv("MODRINTH_TOKEN")
//     projectId = "eKgd4diD"
//     versionNumber = version
//     versionType = "alpha"
//     uploadFile = remapJar
//     gameVersions = ["1.19.4"]
//     dependencies {
//         required.project "fabric-api"
//         required.project "fabric-language-kotlin"
//     }
// }